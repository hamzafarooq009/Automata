
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTIPLYDIVIDEAND ASSIGN BOOL CHAR COMMA DISPLAY DIVIDE DOT DOUBLE EQUALS GREATEREQUAL GREATERTHAN IDENTIFIER INT LCURLY LESSEQUAL LESSTHAN LROUND LSQBRAC MINUS MINUSMINUS MULTIPLY NEWLINE NOT NOTEQUAL OR PERCENTAGE PLUS PLUSPLUS POW RCURLY RROUND RSQBRAC SEMICOLON STRING TYPEelement : stmt SEMICOLONstmt : DISPLAY LROUND optparams RROUNDoptparams : paramsoptparams : params : exp COMMA paramsparams : expstmt : IDENTIFIER ASSIGN expstmt : TYPE IDENTIFIERstmt : TYPE IDENTIFIER ASSIGN expstmt : expexp : LROUND exp RROUNDexp : IDENTIFIERexp : STRINGexp : BOOLexp : INTexp : DOUBLEexp : CHARexp : exp PLUS expexp : exp MINUS expexp : exp MULTIPLY expexp : exp DIVIDE expexp : NOT expexp : exp AND expexp : exp OR exp'
    
_lr_action_items = {'DISPLAY':([0,],[3,]),'IDENTIFIER':([0,4,7,13,15,18,19,20,21,22,23,24,38,40,],[5,17,25,17,17,17,17,17,17,17,17,17,17,17,]),'TYPE':([0,],[7,]),'LROUND':([0,3,4,13,15,18,19,20,21,22,23,24,38,40,],[4,15,4,4,4,4,4,4,4,4,4,4,4,4,]),'STRING':([0,4,13,15,18,19,20,21,22,23,24,38,40,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'BOOL':([0,4,13,15,18,19,20,21,22,23,24,38,40,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'INT':([0,4,13,15,18,19,20,21,22,23,24,38,40,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'DOUBLE':([0,4,13,15,18,19,20,21,22,23,24,38,40,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'CHAR':([0,4,13,15,18,19,20,21,22,23,24,38,40,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'NOT':([0,4,13,15,18,19,20,21,22,23,24,38,40,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'$end':([1,14,],[0,-1,]),'SEMICOLON':([2,5,6,8,9,10,11,12,17,25,26,30,31,32,33,34,35,36,37,39,41,],[14,-12,-10,-13,-14,-15,-16,-17,-12,-8,-22,-11,-7,-18,-19,-20,-21,-23,-24,-2,-9,]),'ASSIGN':([5,25,],[18,38,]),'PLUS':([5,6,8,9,10,11,12,16,17,26,29,30,31,32,33,34,35,36,37,41,],[-12,19,-13,-14,-15,-16,-17,19,-12,19,19,-11,19,-18,-19,-20,-21,19,19,19,]),'MINUS':([5,6,8,9,10,11,12,16,17,26,29,30,31,32,33,34,35,36,37,41,],[-12,20,-13,-14,-15,-16,-17,20,-12,20,20,-11,20,-18,-19,-20,-21,20,20,20,]),'MULTIPLY':([5,6,8,9,10,11,12,16,17,26,29,30,31,32,33,34,35,36,37,41,],[-12,21,-13,-14,-15,-16,-17,21,-12,21,21,-11,21,21,21,-20,-21,21,21,21,]),'DIVIDE':([5,6,8,9,10,11,12,16,17,26,29,30,31,32,33,34,35,36,37,41,],[-12,22,-13,-14,-15,-16,-17,22,-12,22,22,-11,22,22,22,-20,-21,22,22,22,]),'AND':([5,6,8,9,10,11,12,16,17,26,29,30,31,32,33,34,35,36,37,41,],[-12,23,-13,-14,-15,-16,-17,23,-12,23,23,-11,23,-18,-19,-20,-21,23,23,23,]),'OR':([5,6,8,9,10,11,12,16,17,26,29,30,31,32,33,34,35,36,37,41,],[-12,24,-13,-14,-15,-16,-17,24,-12,24,24,-11,24,-18,-19,-20,-21,24,24,24,]),'RROUND':([8,9,10,11,12,15,16,17,26,27,28,29,30,32,33,34,35,36,37,42,],[-13,-14,-15,-16,-17,-4,30,-12,-22,39,-3,-6,-11,-18,-19,-20,-21,-23,-24,-5,]),'COMMA':([8,9,10,11,12,17,26,29,30,32,33,34,35,36,37,],[-13,-14,-15,-16,-17,-12,-22,40,-11,-18,-19,-20,-21,-23,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'element':([0,],[1,]),'stmt':([0,],[2,]),'exp':([0,4,13,15,18,19,20,21,22,23,24,38,40,],[6,16,26,29,31,32,33,34,35,36,37,41,29,]),'optparams':([15,],[27,]),'params':([15,40,],[28,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> element","S'",1,None,None,None),
  ('element -> stmt SEMICOLON','element',2,'p_statement','parser.py',18),
  ('stmt -> DISPLAY LROUND optparams RROUND','stmt',4,'p_stmt_display','parser.py',23),
  ('optparams -> params','optparams',1,'p_optparams','parser.py',28),
  ('optparams -> <empty>','optparams',0,'p_optparams_empty','parser.py',33),
  ('params -> exp COMMA params','params',3,'p_params','parser.py',39),
  ('params -> exp','params',1,'p_params_exp','parser.py',43),
  ('stmt -> IDENTIFIER ASSIGN exp','stmt',3,'p_stmt_assignment','parser.py',49),
  ('stmt -> TYPE IDENTIFIER','stmt',2,'p_stmt_init_empty','parser.py',54),
  ('stmt -> TYPE IDENTIFIER ASSIGN exp','stmt',4,'p_stmt_init_assign','parser.py',59),
  ('stmt -> exp','stmt',1,'p_stmt_exp','parser.py',64),
  ('exp -> LROUND exp RROUND','exp',3,'p_exp_para','parser.py',69),
  ('exp -> IDENTIFIER','exp',1,'p_exp_identifier','parser.py',73),
  ('exp -> STRING','exp',1,'p_exp_string','parser.py',77),
  ('exp -> BOOL','exp',1,'p_exp_bool','parser.py',80),
  ('exp -> INT','exp',1,'p_exp_int','parser.py',83),
  ('exp -> DOUBLE','exp',1,'p_exp_double','parser.py',86),
  ('exp -> CHAR','exp',1,'p_exp_char','parser.py',89),
  ('exp -> exp PLUS exp','exp',3,'p_exp_plus','parser.py',94),
  ('exp -> exp MINUS exp','exp',3,'p_exp_minus','parser.py',99),
  ('exp -> exp MULTIPLY exp','exp',3,'p_exp_multiply','parser.py',102),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_divide','parser.py',105),
  ('exp -> NOT exp','exp',2,'p_exp_not','parser.py',108),
  ('exp -> exp AND exp','exp',3,'p_exp_and','parser.py',111),
  ('exp -> exp OR exp','exp',3,'p_exp_or','parser.py',114),
]
